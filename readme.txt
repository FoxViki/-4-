Задача 1 - Iterator
? Создать класс Студент
? Создать класс УчебнаяГруппа
? Создать класс УчебнаяГруппаИтератор, заставив его реализовать
интерфейс Iterator
? Реализовать его контракты (включая удаление)


Задача 2 - Iterable
? Модифицировать класс УчебнаяГруппа, заставив его реализовать
интерфейс Iterable
? Реализовать метод iterator() возвращающий экземпляр созданного нами
итератора
? Создать класс УчебнаяГруппаСервис, добавив в него метод удаления
студента по ФИО
? Создать класс Контроллер, добавив в него метод удаления студента и
вызывать в нем созданный метод из УчебнаяГруппаСервис



Задача 3 - Comparable
? Модифицировать класс Студент, заставив его реализовать интерфейс
Comparable
? Реализовать контракт compareTo () со сравнением по какому-либо
параметру (пример studentId)
? Модифицировать класс УчебнаяГруппаСервис, добавив в него метод
сортировки списка студентов по id
? Модифицировать класс Контроллер, добавив в него метод сортировки
списка студентов по id и вызывать в нем созданный метод из
УчебнаяГруппаСервис


Задача 4 - Comparator
? Создать класс СтудентКомпаратор реализующий интерфейс Comparator
? Реализовать контракт compare () со сравнением по какому-либо параметру
(пример: сочетание Имя+Фамилия)
? Модифицировать класс УчебнаяГруппаСервис, добавив в него метод
сортировки списка студентов по ФИО
? Модифицировать класс Контроллер, добавив в него метод сортировки
списка студентов по ФИО и вызывать в нем созданный метод из
УчебнаяГруппаСервис



семинар 4
Задача 1
? Создать класс Юзер и перенести в него базовые поля ( ФИО )
? Модифицировать ранее созданный класс СтудентКомпаратор
? Переименовать в ЮзерКомпаратор
? Типизировать его T наследующегося от типа Юзер ( T extends User )
? Типизировать реализуемый интерфейс Компаратор T
? Изменить метод компаре, внеся во входные данные вместо конкретных
классов типизацию T
? Внести правки места, где использовался предыдущий компаратор


Задача 2
? Создать интерфейс ЮзерВью
? Типизировать его T наследующегося от типа Юзер
? Создать в нем метод sendOnConsole(List<Student> students) используя
типизацию
? Создать класс СтудентВью реализующий созданный интерфейс


Задача 3
? Модифицировать ранее созданный класс Контроллер переименовав его в
StudentController
? Создайте новый интерфейс UserController
? Опишите в нем метод create
? Типизировать его T наследующегося от типа Юзер
? В классе СтудентКонтроллер реализуйте интерфейс UserController
? Добавить в методы контроллера вывод в консоль с помощью метода
sendOnConsole



Домашка
Урок 4. ООП: Обобщения. ч1
— Создать класс УчительВью и реализовать аналогично проделанному на семинаре;
— Создать класс УчительКонтроллер и реализовать возможность создания, редактирования конкретного учителя и отображения списка учителей, имеющихся в системе.

Формат сдачи: ссылка на гитхаб проект